{"ast":null,"code":"var _jsxFileName = \"D:\\\\Full Stack Project\\\\TimeTrackerIDE\\\\TimeTrackerIDE-frontEnd\\\\src\\\\Pages\\\\Editor\\\\Editor-1\\\\codeEditor.jsx\",\n  _s = $RefreshSig$();\nimport React, { useContext } from \"react\";\nimport axios from \"axios\";\nimport { Controlled as CodeMirror } from \"react-codemirror2\";\nimport \"codemirror/lib/codemirror.css\";\nimport \"codemirror/theme/material.css\";\nimport \"codemirror/mode/clike/clike\";\nimport \"codemirror/mode/python/python\";\nimport { CodeContext } from \"../../codeContext.jsx\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst CodeEditor = () => {\n  _s();\n  const {\n    code,\n    setCode,\n    language,\n    setLanguage,\n    setResult,\n    setShowTracker,\n    input1,\n    input2\n  } = useContext(CodeContext);\n  const RunCode = () => {\n    axios.post('http://localhost:8000/python/editor1', {\n      code: code,\n      input1: input1,\n      input2: input2\n    }).then(({\n      data\n    }) => {\n      setResult(data);\n      setShowTracker(true);\n      console.log(data);\n    }).catch(() => alert(\"Error in connectivity with backend !!\"));\n  };\n  const handleCodeChange = value => {\n    if (value === \"python\") {\n      setCode(\"#code Here\");\n    } else {\n      setCode(\"//code Here\");\n    }\n  };\n  const handleLanguageChange = event => {\n    const selectedLanguage = event.target.value;\n    setLanguage(selectedLanguage);\n    handleCodeChange(selectedLanguage);\n  };\n  const getMode = language => {\n    switch (language) {\n      case \"python\":\n        return \"python\";\n      case \"c\":\n      case \"cpp\":\n        return \"text/x-csrc\";\n      case \"java\":\n        return \"text/x-java\";\n      default:\n        return \"python\";\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      backgroundColor: \"rgb(12, 16, 33)\"\n    },\n    id: \"CodeEditor-div\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      id: \"Languages-Title\",\n      children: \"Languages\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n      id: \"Languages\",\n      name: \"languages\",\n      onChange: handleLanguageChange,\n      value: language,\n      children: [/*#__PURE__*/_jsxDEV(\"option\", {\n        value: \"python\",\n        children: \"Python\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n        value: \"c\",\n        children: \"C\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n        value: \"cpp\",\n        children: \"Cpp\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n        value: \"java\",\n        children: \"Java\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      id: \"Run\",\n      onClick: RunCode,\n      children: \"Run\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(CodeMirror, {\n      value: code,\n      options: {\n        mode: getMode(language),\n        theme: \"material\",\n        lineNumbers: true\n      },\n      onBeforeChange: (_editor, _data, value) => {\n        setCode(value);\n      },\n      className: \"code-mirror\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 56,\n    columnNumber: 5\n  }, this);\n};\n_s(CodeEditor, \"/Ynk4T2ToIMvg7lBmnSp7xE4Xv4=\");\n_c = CodeEditor;\nexport default CodeEditor;\nvar _c;\n$RefreshReg$(_c, \"CodeEditor\");","map":{"version":3,"names":["React","useContext","axios","Controlled","CodeMirror","CodeContext","jsxDEV","_jsxDEV","CodeEditor","_s","code","setCode","language","setLanguage","setResult","setShowTracker","input1","input2","RunCode","post","then","data","console","log","catch","alert","handleCodeChange","value","handleLanguageChange","event","selectedLanguage","target","getMode","style","backgroundColor","id","children","fileName","_jsxFileName","lineNumber","columnNumber","name","onChange","onClick","options","mode","theme","lineNumbers","onBeforeChange","_editor","_data","className","_c","$RefreshReg$"],"sources":["D:/Full Stack Project/TimeTrackerIDE/TimeTrackerIDE-frontEnd/src/Pages/Editor/Editor-1/codeEditor.jsx"],"sourcesContent":["import React, { useContext } from \"react\";\r\nimport axios from \"axios\"; \r\n\r\nimport { Controlled as CodeMirror } from \"react-codemirror2\";\r\nimport \"codemirror/lib/codemirror.css\";\r\nimport \"codemirror/theme/material.css\";\r\nimport \"codemirror/mode/clike/clike\";\r\nimport \"codemirror/mode/python/python\";\r\n\r\nimport { CodeContext } from \"../../codeContext.jsx\";\r\n\r\nconst CodeEditor = () => {\r\n  const { code, setCode, language, setLanguage, setResult, setShowTracker, input1, input2} = useContext(CodeContext);\r\n\r\n  const RunCode = () => {\r\n    axios \r\n      .post('http://localhost:8000/python/editor1', { code: code, input1: input1, input2: input2})\r\n      .then(({data}) => {\r\n        setResult(data);\r\n        setShowTracker(true);\r\n        console.log(data);\r\n      })\r\n      .catch(() => alert(\"Error in connectivity with backend !!\" )\r\n      ) \r\n  }\r\n\r\n  const handleCodeChange = (value) => {\r\n    if (value === \"python\") {\r\n      setCode(\"#code Here\");\r\n    } else {\r\n      setCode(\"//code Here\");\r\n    }\r\n  };\r\n\r\n  const handleLanguageChange = (event) => {\r\n    const selectedLanguage = event.target.value;\r\n    setLanguage(selectedLanguage);\r\n    handleCodeChange(selectedLanguage);\r\n  };\r\n\r\n  const getMode = (language) => {\r\n    switch (language) {\r\n      case \"python\":\r\n        return \"python\";\r\n      case \"c\":\r\n      case \"cpp\":\r\n        return \"text/x-csrc\";\r\n      case \"java\":\r\n        return \"text/x-java\";\r\n      default:\r\n        return \"python\";\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div style={{ backgroundColor: \"rgb(12, 16, 33)\" }} id=\"CodeEditor-div\">\r\n      \r\n      <h1 id=\"Languages-Title\">Languages</h1> \r\n      <select id=\"Languages\" name=\"languages\" onChange={handleLanguageChange} value={language}>\r\n        <option value=\"python\">Python</option>\r\n        <option value=\"c\">C</option>\r\n        <option value=\"cpp\">Cpp</option>\r\n        <option value=\"java\">Java</option>\r\n      </select>\r\n\r\n      <button id=\"Run\" onClick={RunCode}>Run</button>\r\n\r\n      <CodeMirror\r\n        value={code}\r\n        options={{\r\n          mode: getMode(language),\r\n          theme: \"material\",\r\n          lineNumbers: true,\r\n        }}\r\n        onBeforeChange={(_editor, _data, value) => {\r\n          setCode(value);\r\n        }}\r\n        className=\"code-mirror\"\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default CodeEditor;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}