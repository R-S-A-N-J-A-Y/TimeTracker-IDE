{"ast":null,"code":"var _jsxFileName = \"D:\\\\Full Stack Project\\\\TimeTrackerIDE\\\\TimeTrackerIDE-frontEnd\\\\src\\\\Pages\\\\Editor\\\\Editor-1\\\\output-area.jsx\",\n  _s = $RefreshSig$();\nimport React, { useContext } from 'react';\nimport { CodeContext } from '../../codeContext.jsx';\nimport { TxtField } from '../Custom Hook/useTxtField.jsx';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction OutputArea() {\n  _s();\n  var _result$result1$messa, _result$result2$messa;\n  const {\n    result,\n    testCases,\n    txtArea1,\n    setTxtArea1,\n    txtArea2,\n    setTxtArea2,\n    btnColor1,\n    setBtnColor1,\n    btnColor2,\n    setBtnColor2\n  } = useContext(CodeContext);\n\n  // Check if result.message is a string or an array\n  const outputText1 = result.result1 && (result.result1.TrueorFalse === \"true\" ? result.result1.answer && result.result1.answer.join('\\n') : typeof result.result1.message === 'string' ? result.result1.message : ((_result$result1$messa = result.result1.message) === null || _result$result1$messa === void 0 ? void 0 : _result$result1$messa.join('\\n')) || '');\n  const outputText2 = result.result2 && (result.result2.TrueorFalse === \"true\" ? result.result2.answer && result.result2.answer.join('\\n') : typeof result.result1.message === 'string' ? result.result2.message : ((_result$result2$messa = result.result2.message) === null || _result$result2$messa === void 0 ? void 0 : _result$result2$messa.join('\\n')) || '');\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"Output-Field-Div\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        id: \"Output-Txt\",\n        children: \"Output :\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        id: \"TestCases\",\n        children: testCases.map(testCase => /*#__PURE__*/_jsxDEV(\"button\", {\n          style: {\n            backgroundColor: testCase === 1 ? btnColor1 : btnColor2\n          },\n          className: `TestCase-${testCase}`,\n          onClick: () => TxtField(testCase, setTxtArea1, setTxtArea2, setBtnColor1, setBtnColor2),\n          children: /*#__PURE__*/_jsxDEV(\"p\", {\n            children: testCase\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 39,\n            columnNumber: 15\n          }, this)\n        }, testCase, false, {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 9\n      }, this), txtArea1 && /*#__PURE__*/_jsxDEV(\"textarea\", {\n        name: \"Code\",\n        id: \"Output-Field\",\n        readOnly: true,\n        value: outputText1 || '',\n        children: \" \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 22\n      }, this), txtArea2 && /*#__PURE__*/_jsxDEV(\"textarea\", {\n        name: \"Code\",\n        id: \"Output-Field\",\n        readOnly: true,\n        value: outputText2 || '',\n        children: \" \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 22\n      }, this), txtArea1 && result.result1 && /*#__PURE__*/_jsxDEV(\"p\", {\n        id: \"Output-Time-Txt\",\n        children: [\" Execution Time: \", result.result1.ExecutionTime.toFixed(3)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 39\n      }, this), txtArea2 && result.result2 && /*#__PURE__*/_jsxDEV(\"p\", {\n        id: \"Output-Time-Txt\",\n        children: [\" Execution Time: \", result.result2.ExecutionTime.toFixed(3)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 39\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n}\n_s(OutputArea, \"t6qxmArhXb2kCixznffH5AphO9U=\");\n_c = OutputArea;\nexport default OutputArea;\nvar _c;\n$RefreshReg$(_c, \"OutputArea\");","map":{"version":3,"names":["React","useContext","CodeContext","TxtField","jsxDEV","_jsxDEV","Fragment","_Fragment","OutputArea","_s","_result$result1$messa","_result$result2$messa","result","testCases","txtArea1","setTxtArea1","txtArea2","setTxtArea2","btnColor1","setBtnColor1","btnColor2","setBtnColor2","outputText1","result1","TrueorFalse","answer","join","message","outputText2","result2","children","id","fileName","_jsxFileName","lineNumber","columnNumber","map","testCase","style","backgroundColor","className","onClick","name","readOnly","value","ExecutionTime","toFixed","_c","$RefreshReg$"],"sources":["D:/Full Stack Project/TimeTrackerIDE/TimeTrackerIDE-frontEnd/src/Pages/Editor/Editor-1/output-area.jsx"],"sourcesContent":["import React, { useContext } from 'react';\r\nimport { CodeContext } from '../../codeContext.jsx';\r\nimport { TxtField } from '../Custom Hook/useTxtField.jsx';\r\n\r\nfunction OutputArea() {\r\n  const { \r\n    result, \r\n    testCases,\r\n    txtArea1, setTxtArea1, \r\n    txtArea2, setTxtArea2,\r\n    btnColor1, setBtnColor1,\r\n    btnColor2, setBtnColor2\r\n  } = useContext(CodeContext);\r\n\r\n  // Check if result.message is a string or an array\r\n  const outputText1 = result.result1 && (\r\n    result.result1.TrueorFalse === \"true\"\r\n      ? (result.result1.answer && result.result1.answer.join('\\n'))\r\n      : (typeof result.result1.message === 'string' ? result.result1.message : result.result1.message?.join('\\n') || '')\r\n  );\r\n\r\n  const outputText2 = result.result2 && (\r\n    result.result2.TrueorFalse === \"true\"\r\n      ? (result.result2.answer && result.result2.answer.join('\\n'))\r\n      : (typeof result.result1.message === 'string' ? result.result2.message : result.result2.message?.join('\\n') || '')\r\n  );\r\n\r\n  return (\r\n    <>\r\n      <div id=\"Output-Field-Div\">\r\n        <h1 id=\"Output-Txt\">Output :</h1>\r\n        <div id=\"TestCases\">\r\n          {testCases.map((testCase) => (\r\n              <button \r\n                key={testCase} \r\n                style={{backgroundColor: testCase===1 ? btnColor1 : btnColor2 }}\r\n                className={`TestCase-${testCase}`} \r\n                onClick={() => TxtField(testCase, setTxtArea1, setTxtArea2, setBtnColor1, setBtnColor2)}>\r\n              <p>{testCase}</p>\r\n              </button>\r\n          ))}\r\n        </div>\r\n\r\n        {txtArea1 && <textarea \r\n          name=\"Code\" \r\n          id=\"Output-Field\" readOnly \r\n          value={outputText1 || ''}\r\n        > </textarea>}\r\n\r\n        {txtArea2 && <textarea \r\n          name=\"Code\" \r\n          id=\"Output-Field\" readOnly \r\n          value={outputText2 ||''}\r\n        > </textarea>}\r\n        \r\n        {txtArea1 && result.result1 &&<p id='Output-Time-Txt'> Execution Time: {result.result1.ExecutionTime.toFixed(3)}</p>}\r\n\r\n        {txtArea2 && result.result2 &&<p id='Output-Time-Txt'> Execution Time: {result.result2.ExecutionTime.toFixed(3)}</p>}\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default OutputArea;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}